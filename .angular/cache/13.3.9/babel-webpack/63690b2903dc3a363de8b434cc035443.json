{"ast":null,"code":"import { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngneat/hot-toast\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email inv\\u00E1lido ! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password inv\\u00E1lido ! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/sign-up\"];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(AuthService, Router, toast) {\n      this.AuthService = AuthService;\n      this.Router = Router;\n      this.toast = toast;\n      this.loginForm = new FormGroup({\n        email: new FormControl(\"menga\", [Validators.required]),\n        password: new FormControl(\"senhas\", Validators.required)\n      });\n    }\n\n    ngOnInit() {}\n\n    get email() {\n      return this.loginForm.get(\"email\");\n    }\n\n    get password() {\n      return this.loginForm.get(\"password\");\n    }\n\n    submit() {\n      if (!this.loginForm.valid) {\n        return;\n      }\n\n      const {\n        email,\n        password\n      } = this.loginForm.value;\n      this.AuthService.signIn({\n        email,\n        password\n      }).pipe(this.toast.observe({\n        success: \"Logado com sucesso\",\n        loading: \"Logando...\",\n        error: \"Erro ao acessar\"\n      })).subscribe(() => {\n        this.Router.navigate([\"../calendar\"]); //utilizar ../home\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HotToastService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 25,\n    vars: 5,\n    consts: [[1, \"text-center\"], [\"src\", \"assets/images/engdb2.png\"], [1, \"login\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mat-card\", \"mat-focus-indicator\"], [1, \"mat-elevation-z5\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Email address\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"mat-focus-indicator\", \"w-100\", \"mt-3\", \"mat-raised-button\", \"mat-button-base\", \"mat-primary\"], [1, \"text-center\", \"mt-3\"], [3, \"routerLink\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-content\", 4)(5, \"h2\");\n        i0.ɵɵtext(6, \"LOGIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, LoginComponent_mat_error_17_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵtext(19, \" LOGAR \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"span\");\n        i0.ɵɵtext(22, \" N\\u00E3o tem uma conta? \");\n        i0.ɵɵelementStart(23, \"a\", 12);\n        i0.ɵɵtext(24, \"Cadastre-se\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i8.NgIf, i6.MatError, i9.MatButton, i2.RouterLinkWithHref],\n    styles: [\"mat-card[_ngcontent-%COMP%]{margin:0 auto;padding:0}.mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]{padding:35px 28px;width:350px}.mat-raised-button.mat-primary[_ngcontent-%COMP%]{width:100%;line-height:45px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}