{"ast":null,"code":"import { Directive, Renderer2, Host, Self, Optional, NgModule } from '@angular/core';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { CdkTableExporter, ServiceLocatorService, DataExtractorService, XLSX_LIGHTWEIGHT, CdkTableExporterModule } from 'cdk-table-exporter';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'cdk-table-exporter';\nimport * as ɵngcc2 from '@angular/material/table';\nexport * from 'cdk-table-exporter';\nlet MatTableExporterDirective = /*#__PURE__*/(() => {\n  class MatTableExporterDirective extends CdkTableExporter {\n    constructor(renderer, serviceLocator, dataExtractor, table) {\n      super(renderer, serviceLocator, dataExtractor, table);\n    }\n    /**\r\n     * Overriding ngAfterViewInit of TableExporter\r\n     */\n\n\n    ngAfterViewInit() {\n      this.exportStarted.subscribe(_ => {\n        this.enablePaginator(false);\n      });\n      this.exportCompleted.subscribe(_ => {\n        this.enablePaginator(true);\n      });\n    }\n    /**\r\n     * MatTable implementation of getPageCount\r\n     */\n\n\n    getPageCount() {\n      return this.getPaginator().getNumberOfPages();\n    }\n    /**\r\n     * MatTable implementation of getPageSize\r\n     */\n\n\n    getPageSize() {\n      var _a, _b;\n\n      return (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.pageSize) !== null && _b !== void 0 ? _b : 0;\n    }\n    /**\r\n     * MatTable implementation of getCurrentPageIndex\r\n     */\n\n\n    getCurrentPageIndex() {\n      var _a, _b;\n\n      return (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.pageIndex) !== null && _b !== void 0 ? _b : 0;\n    }\n    /**\r\n     * MatTable implementation of getTotalItemsCount\r\n     */\n\n\n    getTotalItemsCount() {\n      var _a, _b, _c, _d, _e;\n\n      return (_e = (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : (_d = (_c = this.getDataSource()) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0;\n    }\n    /**\r\n     * MatTable implementation of goToPage\r\n     */\n\n\n    goToPage(index) {\n      this.getPaginator().pageIndex = index;\n\n      this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n    }\n    /**\r\n     * MatTable implementation of getPageChangeObservable\r\n     */\n\n\n    getPageChangeObservable() {\n      return this.getPaginator().page;\n    }\n\n    getDataSource() {\n      return this._cdkTable.dataSource;\n    }\n\n    getPaginator() {\n      return this.getDataSource().paginator;\n    }\n\n    enablePaginator(value) {\n      if (this.getPaginator()) {\n        this.getPaginator().disabled = !value;\n\n        this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n      }\n    }\n\n  }\n\n  MatTableExporterDirective.ɵfac = function MatTableExporterDirective_Factory(t) {\n    return new (t || MatTableExporterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServiceLocatorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataExtractorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatTable, 11));\n  };\n\n  MatTableExporterDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTableExporterDirective,\n    selectors: [[\"\", \"matTableExporter\", \"\"]],\n    exportAs: [\"matTableExporter\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTableExporterDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MatTableExporterModule = /*#__PURE__*/(() => {\n  class MatTableExporterModule {\n    static forRoot(configuration) {\n      return {\n        ngModule: MatTableExporterModule,\n        providers: [{\n          provide: XLSX_LIGHTWEIGHT,\n          useValue: configuration.xlsxLightWeight\n        }]\n      };\n    }\n\n  }\n\n  MatTableExporterModule.ɵfac = function MatTableExporterModule_Factory(t) {\n    return new (t || MatTableExporterModule)();\n  };\n\n  MatTableExporterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatTableExporterModule\n  });\n  MatTableExporterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[MatTableModule, CdkTableExporterModule]]\n  });\n  return MatTableExporterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableExporterModule, {\n    declarations: function () {\n      return [MatTableExporterDirective];\n    },\n    imports: function () {\n      return [MatTableModule, CdkTableExporterModule];\n    },\n    exports: function () {\n      return [MatTableExporterDirective];\n    }\n  });\n})();\n/*\r\n * Public API Surface of mat-table-exporter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { MatTableExporterDirective, MatTableExporterModule }; //# sourceMappingURL=mat-table-exporter.js.map","map":null,"metadata":{},"sourceType":"module"}