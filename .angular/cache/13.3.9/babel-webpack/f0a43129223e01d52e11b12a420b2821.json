{"ast":null,"code":"import { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/auth/auth.service\";\nimport * as i2 from \"@ngneat/hot-toast\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction SignUpComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" O nome \\u00E9 obrigat\\u00F3rio! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"E-mail \\u00E9 obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"E-mail inv\\u00E1lido!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" A senha \\u00E9 obrigat\\u00F3ria! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"A confirma\\u00E7\\u00E3o da senha \\u00E9 obrigat\\u00F3ria! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" As senhas n\\u00E3o s\\u00E3o as mesmas ! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/login\"];\n};\n\nexport function passwordsMatchValidator() {\n  return control => {\n    var _a, _b;\n\n    const password = (_a = control.get(\"password\")) === null || _a === void 0 ? void 0 : _a.value;\n    const passwordConfirm = (_b = control.get(\"confirmPassword\")) === null || _b === void 0 ? void 0 : _b.value;\n\n    if (password && passwordConfirm && password !== passwordConfirm) {\n      return {\n        passwordsDontMatch: true\n      };\n    }\n\n    return null;\n  };\n}\nexport let SignUpComponent = /*#__PURE__*/(() => {\n  class SignUpComponent {\n    constructor(authService, toast, router) {\n      this.authService = authService;\n      this.toast = toast;\n      this.router = router;\n      this.signUpForm = new FormGroup({\n        name: new FormControl(\"\", Validators.required),\n        email: new FormControl(\"\", Validators.required),\n        password: new FormControl(\"\", Validators.required),\n        confirmPassword: new FormControl(\"\", Validators.required)\n      }, {\n        validators: passwordsMatchValidator()\n      });\n    }\n\n    ngOnInit() {}\n\n    get name() {\n      return this.signUpForm.get(\"name\");\n    }\n\n    get email() {\n      return this.signUpForm.get(\"email\");\n    }\n\n    get password() {\n      return this.signUpForm.get(\"password\");\n    }\n\n    get confirmPassword() {\n      return this.signUpForm.get(\"confirmPassword\");\n    }\n\n    submit() {\n      if (!this.signUpForm.valid) return;\n      const {\n        name,\n        email,\n        password\n      } = this.signUpForm.value;\n      this.authService;\n      this.authService.signUp(this.signUpForm.value);\n      this.router.navigate([\"login\"]);\n    }\n\n  }\n\n  SignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n    return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HotToastService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignUpComponent,\n    selectors: [[\"app-sign-up\"]],\n    decls: 35,\n    vars: 9,\n    consts: [[1, \"text-center\"], [\"src\", \"assets/images/engdb2.png\"], [1, \"login\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mat-card\", \"mat-focus-indicator\"], [1, \"mat-elevation-z5\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"E-mail\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"placeholder\", \"Senha\", \"formControlName\", \"password\", \"type\", \"password\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Confirme a senha\", \"formControlName\", \"confirmPassword\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"mat-focus-indicator\", \"w-100\", \"mt-3\", \"mat-raised-button\", \"mat-button-base\", \"mat-primary\"], [1, \"center\", \"my-3\"], [1, \"ml-1\", 3, \"routerLink\"]],\n    template: function SignUpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-content\", 4)(5, \"h2\");\n        i0.ɵɵtext(6, \"Cadastrar um novo usu\\u00E1rio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵtemplate(12, SignUpComponent_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, SignUpComponent_mat_error_17_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵtemplate(18, SignUpComponent_mat_error_18_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 6)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵtemplate(23, SignUpComponent_mat_error_23_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-form-field\");\n        i0.ɵɵelement(25, \"input\", 11);\n        i0.ɵɵtemplate(26, SignUpComponent_mat_error_26_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, SignUpComponent_mat_error_27_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementStart(28, \"button\", 12);\n        i0.ɵɵtext(29, \" Cadastrar \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 13)(31, \"div\");\n        i0.ɵɵtext(32, \" J\\u00E1 possui um cadastro? \");\n        i0.ɵɵelementStart(33, \"a\", 14);\n        i0.ɵɵtext(34, \"Login \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.name == null ? null : ctx.name.errors == null ? null : ctx.name.errors[\"required\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"email\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmPassword == null ? null : ctx.confirmPassword.errors == null ? null : ctx.confirmPassword.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.errors == null ? null : ctx.signUpForm.errors[\"passwordsDontMatch\"]);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(8, _c0));\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i8.NgIf, i6.MatError, i9.MatButton, i3.RouterLinkWithHref],\n    styles: [\"mat-card[_ngcontent-%COMP%]{margin:0 auto;padding:0}.mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]{padding:35px 28px;width:350px}.mat-raised-button.mat-primary[_ngcontent-%COMP%]{width:100%;line-height:45px}\"]\n  });\n  return SignUpComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}