{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/api.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/radio\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/datepicker\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction DialogComponent_mat_radio_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fresh_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", fresh_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fresh_r2, \" \");\n  }\n}\n\nexport let DialogComponent = /*#__PURE__*/(() => {\n  class DialogComponent {\n    constructor(formBuilder, api, editData, dialogRef) {\n      this.formBuilder = formBuilder;\n      this.api = api;\n      this.editData = editData;\n      this.dialogRef = dialogRef;\n      this.freshnessList = [\"Automatico\", \"Manual\"];\n      this.actionBtn = \"Save\";\n    }\n\n    ngOnInit() {\n      this.productForm = this.formBuilder.group({\n        freshness: [\"\", Validators.required],\n        productName: [\"\", Validators.required],\n        date: [\"\", Validators.required],\n        category: [\"\", Validators.required],\n        price: [\"\", Validators.required],\n        comment: [\"\", Validators.required]\n      });\n\n      if (this.editData) {\n        this.actionBtn = \"Update\";\n        this.productForm.controls[\"freshness\"].setValue(this.editData.freshness);\n        this.productForm.controls[\"productName\"].setValue(this.editData.productName);\n        this.productForm.controls[\"date\"].setValue(this.editData.date);\n        this.productForm.controls[\"category\"].setValue(this.editData.category);\n        this.productForm.controls[\"price\"].setValue(this.editData.price);\n        this.productForm.controls[\"comment\"].setValue(this.editData.comment);\n      }\n    }\n\n    addProduct() {\n      if (!this.editData) {\n        if (this.productForm.valid) {\n          this.api.postProduct(this.productForm.value).subscribe({\n            next: res => {\n              console.log(\"Product added successfuly\");\n              this.productForm.reset();\n              this.dialogRef.close(\"save\");\n            },\n            error: () => {\n              console.log(\"Error while adding the product\");\n            }\n          });\n        }\n      } else {\n        this.updateProduct();\n      }\n    }\n\n    updateProduct() {\n      this.api.putProduct(this.productForm.value, this.editData.id).subscribe({\n        next: res => {\n          console.log(\"Produto atualizado com sucesso\");\n          this.productForm.reset();\n          this.dialogRef.close(\"update\");\n        },\n        error: () => {\n          console.log(\"Erro no momento de fazer o Update\");\n        }\n      });\n    }\n\n  }\n\n  DialogComponent.ɵfac = function DialogComponent_Factory(t) {\n    return new (t || DialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n  };\n\n  DialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogComponent,\n    selectors: [[\"app-dialog\"]],\n    decls: 45,\n    vars: 6,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-12\", \"my-3\"], [\"formControlName\", \"freshness\", 1, \"example-radio-group\"], [\"class\", \"exemple-radio-button\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"formControlName\", \"productName\", \"matInput\", \"\", \"placeholder\", \"Hora\"], [\"appearance\", \"outline\"], [\"formControlName\", \"date\", \"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [1, \"col-12\"], [\"formControlName\", \"category\", \"placeholder\", \"Atividade\"], [\"value\", \"Atividade em Sobreaviso - SABESP [131]\"], [\"value\", \"Net@ Setup/Net@ Lite [149]\"], [\"value\", \"ExaBeat [59]\"], [\"formControlName\", \"price\", \"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Mantis/Ref\"], [\"formControlName\", \"comment\", \"matInput\", \"\"], [\"mat-dialog-actions\", \"\", 3, \"align\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"exemple-radio-button\", 3, \"value\"]],\n    template: function DialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Registro de Horas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"mat-radio-group\", 5);\n        i0.ɵɵtemplate(7, DialogComponent_mat_radio_button_7_Template, 2, 2, \"mat-radio-button\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"mat-form-field\", 8)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Hora\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"mat-form-field\", 10)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11)(18, \"mat-datepicker-toggle\", 12)(19, \"mat-datepicker\", null, 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 14)(22, \"mat-form-field\", 10)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-select\", 15)(26, \"mat-option\", 16);\n        i0.ɵɵtext(27, \"Atividade em Sobreaviso - SABESP [131]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-option\", 17);\n        i0.ɵɵtext(29, \"Net@ Setup/Net@ Lite [149]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-option\", 18);\n        i0.ɵɵtext(31, \"ExaBeat [59]\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(32, \"mat-form-field\", 8)(33, \"mat-label\");\n        i0.ɵɵtext(34, \"MANTIS/REF\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-form-field\", 8)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Justificativa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"textarea\", 20);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"div\", 21)(41, \"button\", 22);\n        i0.ɵɵtext(42, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function DialogComponent_Template_button_click_43_listener() {\n          return ctx.addProduct();\n        });\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(20);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.freshnessList);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"align\", \"end\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.actionBtn, \" \");\n      }\n    },\n    directives: [i3.MatDialogTitle, i3.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatRadioGroup, i1.NgControlStatus, i1.FormControlName, i5.NgForOf, i4.MatRadioButton, i6.MatFormField, i6.MatLabel, i1.DefaultValueAccessor, i7.MatInput, i8.MatDatepickerInput, i8.MatDatepickerToggle, i6.MatSuffix, i8.MatDatepicker, i9.MatSelect, i10.MatOption, i1.NumberValueAccessor, i3.MatDialogActions, i11.MatButton, i3.MatDialogClose],\n    styles: [\".mat-radio-button[_ngcontent-%COMP%] ~ .mat-radio-button[_ngcontent-%COMP%]{margin-left:16px}\"]\n  });\n  return DialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}